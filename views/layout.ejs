<!DOCTYPE html>
<html lang="es">
  <head>
    <title>RobotUI</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->


    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap-theme.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap.css">
    <link rel="stylesheet" href="/styles/chosen/chosen.css">
    <link rel="stylesheet" href="/styles/chosen/ImageSelect.css">
    <link rel="stylesheet" href="/styles/styles.css">
    <link rel="stylesheet" href="/styles/sidebar/sidebar.css">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
    <!--STYLES END-->

    <!--SCRIPTS-->
    <script src="/js/vendor/jquery-1.11.3.js"></script>
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/customValidate.js"></script>
    <script src="/js/vendor/bootstrap.js"></script>
    <script src="/js/vendor/chosen.jquery.js"></script>
    <script src="/js/vendor/ImageSelect.jquery.js"></script>
    <script src="/js/vendor/npm.js"></script>
    <!--SCRIPTS END-->


  </head>

  <body>

  <div class="navbar navbar-default navbar-inverse">
    <div class="container">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="/">RobotUI</a>
      </div>
      <div class="navbar-collapse collapse">
        <ul class="nav navbar-nav">
          <% if (session.authenticated) { %>
            <li class="active"><a href="/user/show/<%= session.User.id%>"><%= session.User.name %></a> </li>

          <% if (session.User.admin) { %>
            <li><a href="/user"> User Administration</a> </li>
          <% } %>
          <li><a href="/robot/index"> My Robots</a> </li>
          <% } %>
        </ul>



      <form class="navbar-form navbar-right">
          <div class="form-group">

            <%= locale = req.getLocale() %>

            <select data-placeholder="Choose a language" class="chzn-select-lan" style="width:80px;" tabindex="2">
              <option value=""></option>
              <option selected='<%= locale == 'en'%>' data-img-src="/images/flags/EN.png" value="en">EN</option>
              <option selected='<%= locale == 'es'%>' data-img-src="/images/flags/ES.png" value="es">ES</option>
              <option selected='<%= locale == 'fr'%>' data-img-src="/images/flags/FR.png" value="fr">FR</option>
              <option selected='<%= locale == 'pt'%>' data-img-src="/images/flags/PT.png" value="pt">PT</option>
            </select>
            <script type="text/javascript">
              $('.chzn-select-lan').chosen({
                "disable_search": true,
              });

            </script>
          </div>
      </form>


        <script type="text/javascript">
          $('.chzn-select-lan').on('change',function(){
            alert("checked the button - worked");
            $.ajax({
              url: '/language/change',
              type: 'GET',
              data: {locale: $( ".chzn-select-lan" ).val()},
              contentType: 'application/json',
              dataType: 'json',

              done:function() {
              },

              success: function(data){

                alert('cambiado');

              },

              failure: function(msg) {
                alert("Fail : " + msg);
              },

              error: function(xhr, status, text) {
                var response = jQuery.parseJSON(xhr, responseText);
                alert(response.error);
              }
            });

          });

        </script>


        <div class="navbar-right">
          <% if (session.authenticated) { %>
          <a class="btn btn-default navbar-btn" href="/session/destroy">sign-out</a>
          <% } %>
        </div>
        <% if (!session.authenticated) { %>
        <form class="navbar-form navbar-right" action="/session/create">
          <div class="form-group">
            <input type="text" placeholder="Email" name="email" class="form-control">
          </div>
          <div class="form-group">
            <input type="password" placeholder="Password" name="password" class="form-control">
          </div>
          <button type="submit" class="btn btn-success">Sign in</button>
          <input type="hidden" name="_csrf" value="<%= _csrf %>">
        </form>
        <% } %>
      </div>
    </div>
  </div>

    <%- body %>

  <div class="container">
    <hr>
    <footer class="footer">
      <div class="pull-right">
        <a href="http://sailsjs.com/">sails.js</a>
      <div>Author: Manuel LÃ³pez Urbina</div>
      </div>
    </footer>
  </div>


    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->

    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->


  </body>
</html>
