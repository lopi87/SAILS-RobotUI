<script type="text/javascript">

  var address_robot =    '<%= robot.ipaddress %>' + ":" + '<%= robot.port %>';

  $("#connect").click(function() {
    try {
      var socket = io.connect(address_robot, {
        'reconnection': true,
        'reconnectionDelay': 10,
        'reconnectionAttempts': 10
      });

    } catch (error) {
      toastr.error('Failed to connect to the Robot!' + address_robot + error, 'Robot')
      io.socket.get('/robot/changetobusy/', {robot: robot_id, state: false});
      change_img_state(robot_id, false, '<%= i18n('connect')%>', '<%= i18n('disconnect')%>');
      change_connect_btn( 'connect','<%= i18n('connect')%>');

    }

    $("#disconnect").click(function () {
      try {
        socket.disconnect();
      } catch (error) {
        toastr.error('Failed to disconnect to the Robot!' + address_robot + error, 'Robot')
        io.socket.get('/robot/changetobusy/', {robot: '<%=robot.id %>', state: false});
        change_img_state('<%= robot.id %>', false, '<%= i18n('connect')%>', '<%= i18n('disconnect')%>');
        change_connect_btn( 'disconnect','<%= i18n('connect')%>');

        <% if( typeof video !== 'undefined' ){ %>
          reset_canvas('play_<%= video.id %>')
        <% } %>
      }
    });


    socket.on('disconnect', function () {
      toastr.info('Robot disconnect!' + address_robot, 'Robot' )
      io.socket.get('/robot/changetobusy/', {robot: '<%=robot.id %>', state: false});
      change_img_state('<%=robot.id %>', false, '<%= i18n('connect')%>', '<%= i18n('disconnect')%>');
      change_connect_btn( 'connect','<%= i18n('connect')%>');

      <% if( typeof video !== 'undefined' ){ %>
        reset_canvas('play_<%= video.id %>')
      <% } %>

    });


    <% if( typeof video !== 'undefined' ){ %>
      socket.on('<%= video.event_name %>', function(data) {
        //console.log(data);
        io.socket.get('/interface/emit_video/',{robot: '<%=robot.id %>', id: '<%= video.id %>', msg: data });
        draw_image_to_canvas('play_<%= video.id %>', data)
      });
    <% } %>

    //Mandar evento "mandar comando" al servidor para sincronizar con otros navegadores
    var $messageForm = $('#sendMessage');
    $messageForm.click(function (e) {
      var $message = $('#message');
      e.preventDefault();
      if($message.val() != '' ){
        //Comunicar al servidor para difundir a los usuarios
        io.socket.get('/interface/emit_command/',{robot: '<%=robot.id %>', id: 'command', msg: $message.val() })
        $('#chat').prepend('- ' + $message.val() + '<br/>');
        //Mandar instruccion al robot
        socket.emit('direction', $message.val());
      }
      $message.val('');
    });


    //Presionar boton accion!
    var interface_buttons = $('[id^=button_]');
    interface_buttons.click(function (e) {
      e.preventDefault();
      var button_pressed_id = this.id.replace('button_custom_','');
      var code = document.getElementById(this.id).value

      //Comunicar al servidor para difundir a los usuarios
      io.socket.get('/interface/emit_action/',{robot: '<%=robot.id %>', id: button_pressed_id, msg: code })

      if (code != ''){
        $('#chat').prepend('- ' + code + '<br/>');
        //Mandar instruccion al robot
        socket.emit('action', code);
        console.log('Emitiendo comando: ' + code );
      }
    });


    // Insertar eventos -->
    <% _.each(events, function(event){ %>
    socket.on("<%= event.event_name %>", function messageReceived(message) {
      io.socket.get('/interface/emit_event/',{robot: '<%=robot.id %>', id: '<%= event.id %>', msg: {value: message.msg, name: '<%= event.name %>'}})
      $('#event_<%= event.id%>').html('<h5><%= event.name %> <span class="label label-pill label-danger color_event_<%= event.id %>">' + message.msg + '</span></h5>');
      $('#chat').prepend('- received: ' + '<%= event.name %>' + ': ' + message.msg + '<br/>');
    });
    <% })%>


    //Slide bar
    $('[id^=slider_]').on( "slide", function(e, ui){
      var slider_id = this.id.replace('slider_','');
      //Comunicar al servidor para difundir a los usuarios
      io.socket.get('/interface/emit_slider/',{robot: '<%=robot.id %>', id: slider_id, msg:  ui.value })
      $('#chat').prepend('- slider value send: ' + ui.value + '<br/>');
      socket.emit('slider',  ui.value);
      console.log('Slider value: ' + ui.value );
    });


    socket.on('connect', function () {
      console.log('robot connected!');
      io.socket.get('/robot/changetobusy/', {robot: '<%=robot.id %>', state: true});

      <% if( typeof video !== 'undefined' ){ %>
        socket.emit('<%= video.event_name %>');
      <%}%>

     toastr.info('<%= i18n('connect_success')%>', 'Robot');
      change_img_state('<%=robot.id %>', true, '<%= i18n('connect')%>', '<%= i18n('disconnect')%>');
      change_connect_btn( 'disconnect','<%= i18n('disconnect')%>');
    });

  });


  function subscribeAndListen() {
    io.socket.get('/message/message_subscribe');
    io.socket.get('/interface/subscribe/', { robot_id: '<%= robot.id %>', socket_id: io.socket.id } );

    io.socket.on('message', function (obj) {
      //EVENTOS CAPURADOS
      switch (obj.type) {
        case 'new_viewer_user':
          toastr.info('<%= i18n('user_connected')%>', 'RobotUI');
          if($("#" + obj.msg.user_id).length == 0 && obj.msg.user_id != '<%= req.session.User.id %>') {
            $('#user_viewer_list').append('<p id="' +  obj.msg.user_id + '"><img src="' + obj.msg.avatar + '" class="card-circle marginright10" height="32" width="32">' + obj.msg.user_name + '<span onclick=eject_viewer_user("' + obj.msg.user_id  + '")><i style="cursor: pointer; color: red" class="fa fa-sign-out marginleft5" aria-hidden="true"></i></span></p>');
          }else{
            $('#current_user').append('<p id="' +  obj.msg.user_id + '"><img src="' + obj.msg.avatar + '" class="card-circle marginright10" height="32" width="32">' + obj.msg.user_name);
          }
          break;

        case 'exit':
          toastr.info('<%= i18n('user_disconnected')%>', 'RobotUI');
          $('#' + obj.msg.user_id).remove();
          break;

        case 'out':
          $('#' + obj.msg.user_id).remove();
          window.location.href = "<%= sails.getBaseUrl() %>";
          break;

        default:
          break;
      }
    });
  }


  function eject_viewer_user(user_id){
    $.ajax({
      url: '/interface/eject_viewer_user/',
      type: 'GET',
      data: {user_id: user_id, robot_id: '<%= robot.id %>'},
      done:function() {
      },

      success: function(data){
       toastr.info('User out!', 'User' );
      },

      error: function(data) {
        show_errors(data.responseText);
      }
    });
  }

</script>
