  <h1 class="text-center login-title"> Interface  <%= robot.name %></h1>

  <button  id="conectar" value="hola" type="button" class="btn btn-sm btn-success">CONECTAR</button></td>
  <button  id="desconectar" value="hola" type="button" class="btn btn-sm btn-danger">DESCONECTAR</button></td>
  <button  id="mandar" value="UP" type="button" class="btn btn-sm btn-warning">MANDAR</button></td>



  <!-- COMPROBAR SI ESTA OCUPADO O NO EL ROBOT PARA PODER MANEJARLO -->
  <% if (robot.online){%>
  <h3><img id="img_state_<%= robot.id %>" height="30" width="30" src="/images/online.png"> </h3>
  <% } else { %>
  <h3><img id="img_state_<%= robot.id %>" height="30" width="30" src="/images/offline.png"> </h3>
  <% }  %>


  <div data-example-id="" class="bd-example">
      <div class="control-group">
        <input id="name_field" type="text" class="form-control" placeholder="name" name="name" required>
      </div>

      <div class="control-group">
        <input id="code_field" type="text" class="form-control" placeholder="code" name="code">
      </div>

      <div class="control-group">
        <select data-placeholder="Choose a type..." class="chzn-select" style="width:350px;" tabindex="2" name="element">
          <option value="button">button</option>
        </select>
      </div>

      <script type="text/javascript">
        $('.chosen-select-type').chosen({});
      </script>
      <br>
      <button id="new_action" type="button" class="btn btn-default">create an action</button>
  </div>



  <table class="table table-bordered">
    <caption>Actions</caption>
    <thead>
    <tr>
      <th>#</th>
      <th>Accion</th>
      <th>boton</th>
      <th></th>
    </tr>
    </thead>

    <tbody id="actualizar">

    <% indice = 0 %>
    <% _.each(actions, function(action){ %>
    <tr id="line_<%= action.id %>" data-model="action">
      <th scope="row"><%= indice++ %></th>
      <td><%= action.name %></td>
      <td> <button  id="button_<%= action.id %>" value="<%= action.code %>" type="button" class="btn btn-sm btn-success"><%= action.name %></button></td>
      <td> <button id="delete_action_<%= action.id %>" type="button" class="btn btn-sm btn-danger" onclick="row_action_deleted('<%= action.id %>')">Delete</button></td>
    </tr>
    <% })%>

    </tbody>
</table>





  <script type="text/javascript">
    $('#new_action').on('click',function(){
      alert("checked the button - new_action");

      $.ajax({
        url: '/interface/newaction/' + '<%= interface.id %>',
        type: 'GET',
        data: {name: $( "#name_field" ).val(), code: $( "#code_field" ).val()},
        contentType: 'application/json',
        dataType: 'json',

        done:function() {
        },

        success: function(data){
          alert("Action created");
          $("#actualizar").append(
            "<tr data-model=\"action\" id=line_" + data.id + ">" +
            "<th scope=\"row\">3</th>" +
            "<td>" + data.name + "</td>" +
          "<td> <button  id=\"button_" + data.id + "\" type=\"button\" value=\"" + data.code + "\" class=\"btn btn-sm btn-success\"\">" + data.name + "</button></td>" +
            "<td> <button id=\"delete_action_" + data.id + "\" type=\"button\" class=\"btn btn-sm btn-danger\" onclick=\"row_action_deleted('" + data.id + "')\">Delete</button></td>" +
          "</tr>"
          );
        },

        failure: function(msg) {
          alert("Fail : " + msg);
        },

        error: function(xhr, status, text) {
          var response = jQuery.parseJSON(xhr, text);
          alert(response.error);
        }
      });
    });


    function row_action_deleted(id) {
      alert("checked the button - delete_action");
      $.ajax({
        url: '/interface/deleteaction/' + id,
        type: 'GET',
        data: {},
        contentType: 'application/json',
        dataType: 'json',

        success: function (data) {
          $("#line_" + id).remove();
        },

        failure: function (msg) {
          alert("Fail : " + msg);
        },

        error: function (xhr, status, text) {
          //var response = jQuery.parseJSON(xhr, text);
          //alert(response.error);
        }
      });
    }

  </script>



  <div class="container">
    <div class="page-header -align-center">
      <h1>Mandar comandos <small> <%= robot.name %> </small></h1>
    </div>

    <div id="content" class="row" style="height: 70%;">
      <div class="col-md-2"></div>
      <div id="cahtContent" class="col-md-3">
        <div class="panel panel-success">
          <div class="panel-heading">
            Comandos
          </div>
          <div id="chat" class="panel-body" style="min-height: 250px; max-height: 250px; overflow-y: scroll;"></div>
        </div>
        <div>
          <form id="sendMessage" class="input-group" style="text-align: center; margin:0 auto;">
            <input id="message" class="form-control input-lg" type="text">
        <span class="input-group-btn">
          <button class="btn btn-lg btn-primary" type="submit">Mandar</button>
        </span>
          </form>
        </div>
      </div>
    </div>
  </div>

  <div class="margintop20 marginbottom20">
  <a href="/robot/index" class="btn btn-sm btn-warning"> My Robots</a>
</div>

  EMISION DE VIDEO

  http://www.jlmonteagudo.com/2012/10/emitir-video-con-tu-dispositivo-movil-con-node-js-express-js-y-socket-io/

  <script src="/socket.io/socket.io.js"></script>
  <script type="text/javascript">

    // https://evothings.com/controlling-a-toy-car-with-evothings-and-raspberry-pi/

    //ROBOT
    //conexion con el robot
    var address_robot = "localhost" + ":" + "8085";
    var robot_id = '<%= robot.id %>';

    $("#conectar").click(function(){
      try {
        // Connect to the server running on the Robot(raspberry pi).
        var socket = io.connect(address_robot);
        socket.on('connect', function() {
          console.log('robot connected!')
          //Sincronizar con el resto de clientes que un robot se ha conectado:
          io.socket.get('/robot/changestate/',{robot: '<%= robot.id %>' , state: 'on'});
          bootstrap_alert['success']('Conectado con exito! ' + address_robot, 5000 )
          change_img_state(robot_id,true)

        })
      } catch (error) {
        bootstrap_alert['danger']('Failed to connect to the Robot! (Raspberry Pi!)' + address_robot + error , 5000)
        io.socket.get('/robot/changestate/',{robot: '<%= robot.id %>' , state: 'off'});
        change_img_state(robot_id,false)
      }


      //Presionar boton desconectar
      $("#desconectar").click(function(){
        try {
          socket.disconnect(function(){
            console.log('robot disconnected!')
            bootstrap_alert['success']('Conectado con exito! ' + address_robot, 5000 )
            change_img_state(robot_id,false)
            //Sincronizar con el resto de clientes:
            io.socket.get('/robot/changestate/',{robot: '<%= robot.id %>' , state: 'off'});
          });
        } catch (error) {
          bootstrap_alert['success']('Error to Disconnect to the Robot! (Raspberry Pi!)' + address_robot + error, 5000 )
          change_img_state(robot_id,false)
        }
      });

      //captura evento desconectar cuando el robot es apagado o pierde la se√±al
      socket.on('disconnect', function() {
        //Sincronizar con el resto de clientes:
        io.socket.get('/robot/changestate/',{robot: '<%= robot.id %>' , state: 'off'});
        bootstrap_alert['danger']('Disconnect to the Robot! (Raspberry Pi!)' + address_robot, 5000 )
        change_img_state(robot_id,false)
      })


      //funcion para mandar comando al robot (nombre y codigo)
      function command_send(name, code){
        try {
          socket.emit(name, code)
          console.log('emitting to robot: ' + code)
        } catch (error) {
          console.log(error + ': ' + code)
          bootstrap_alert['danger']('Error to send command! (Raspberry Pi!)' + address_robot + error, 5000 )
          change_img_state(robot_id,false)
        }
      }


      //Mandar evento "mandar comando" al servidor para sincronizar con otros navegadores
      var $messageForm = $('#sendMessage');
      $messageForm.submit(function (e) {
        var $message = $('#message');
        e.preventDefault();
        if($message.val() != '' ) io.socket.get('/interface/commandline/',{interface: '<%= interface.id %>' ,user_id: '<%= session.User.id%>'   ,command: $message.val()});
        command_send('direction', $message.val())
        $message.val('');
      });



      //PENDIENTE DE MIRAR EVENTOS PARA LOS BOTONES
      //emite el comando de los botones creados en la interfaz
      var interface_buttons = $('[id^=button_]');
      interface_buttons.click(function (e) {
        var button_pressed_id = this.id.replace('button_','');
        var code = document.getElementById(this.id).value

        e.preventDefault();
        io.socket.get('/interface/commandline/',{interface: '<%= interface.id %>' ,user_id: '<%= session.User.id%>'   ,button: button_pressed_id});

        if (code != ''){
          command_send('direction',code);
        }
        //Emitir al servidor la accion para sincronizar con el resto de clientes....
        //Mandar evento al servidor para sincronizar con otros navegadores

      });


    });


    window.onload = function subscribeAndListen() {
      io.socket.get('/interface/commandline/');
      var $chat = $('#chat');

      io.socket.on('interface', function (obj) {
        if (obj.verb == 'created') {
          var data = obj.data;
          console.log('Command ' + data.command + ' ' + data.id +' has been send.');
          $chat.append(' - ' + data.command + '<br/>');
        }
      });
    };


    //IMAGEN ESTADO
    function change_img_state(robot_id, boolean){
      var img_id = '#img_state_' + robot_id;
      var img_on= "online.png";
      var img_off= "offline.png"

      if (boolean){
        var src = $(img_id).attr("src").replace(img_off, img_on);
        $(img_id).attr("src", src);
      }else{
        var src = $(img_id).attr("src").replace(img_on,img_off);
        $(img_id).attr("src", src);
      }
    }


    //IMPLEMENTAR INTERFAZ MODO VISION Y MODO CONTROL


  </script>




