<!-- PERSONALIZAR VENTANA -->
<div id="board" class="panel panel-success margintop20 paddingbottom20">
  <div class="panel-heading">
    <img style="max-width:150px;" src="/images/logo/logotipo.png">
  </div>
  <%- partial('config_menu.ejs')%>
</div>

<%- partial ('_robot_info.ejs')%>


<div class="margintop20 marginbottom20 floatright">
  <a href="/robot/index" class="btn btn-sm btn-success bottom-right"><i class="fa fa-home" aria-hidden="true"></i> My Robots</a>
  <a href="/interface/show/<%= interface.id %>" class="btn btn-sm btn-primary bottom-right"><i class="fa fa-gamepad" aria-hidden="true"></i> Take control</a>
  <input id="_csrf" type="hidden" name="_csrf" value="<%= _csrf %>"/>
</div>

<script type="text/javascript">

  interact('.draggable')
    .draggable({
      // enable inertial throwing
      inertia: true,
      // keep the element within the area of it's parent
      restrict: {
        restriction: "parent",
        endOnly: true,
        elementRect: { top: 0, left: 0, bottom: 1, right: 1 }
      },
      // enable autoScroll
      autoScroll: true,

      // call this function on every dragmove event
      onmove: dragMoveListener,
      // call this function on every dragend event
      onend: function (event) {
        var target = event.target;
        var pos_x = target.getAttribute('data-x');
        var pos_y = target.getAttribute('data-y');

        var id = target.getAttribute('id')
        var id_parts = id.split("_");
        var elem = $('#' + target.getAttribute('id'));
        id_parts[0] = id_parts[0] == 'button' ? 'action': id_parts[0]

        var p = elem.position();
        $.ajax({
          type: "POST",
          url: "/" + id_parts[0] + "/update_position",
          data: { x: p.left, y: p.top, id: id_parts[1]},
          beforeSend: function(xhr){
            xhr.setRequestHeader('X-CSRF-Token', $("#_csrf").val());
          },
          done: function () {
            console.log('bottom position updated');
          },
          success: function(data){
            console.log('bottom position updated');
          },

          error: function(xhr, status, text) {
            bootstrap_alert['danger'](xhr.responseText, 5000 );
          }
        });

      }
    });

  function dragMoveListener (event) {
    var target = event.target,
      // keep the dragged position in the data-x/data-y attributes
      x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
      y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

    // translate the element
    target.style.webkitTransform =
      target.style.transform =
        'translate(' + x + 'px, ' + y + 'px)';

    // update the posiion attributes
    target.setAttribute('data-x', x);
    target.setAttribute('data-y', y);
  }

  // this is used later in the resizing and gesture demos
  window.dragMoveListener = dragMoveListener;

  function getdraggablemaxheightwidth() {
    var $container = $("#panel"),
      maxheight = 400,
      maxwidth = 400,
      currentheight = 0,
      currentwidth = 0,
      currentposition;

    $container.children(".draggable").each(function(index, element) {
      currentposition = $(element).position();
      currentheight = currentposition.top + $(element).outerHeight() + 5;
      if(currentheight > maxheight)
        maxheight = currentheight;


      currentwidth = currentposition.left + $(element).outerWidth() + 5;
      if(currentwidth > maxwidth)
        maxwidth = currentwidth;
    });

    return [maxheight, maxwidth];

  }


  $("#panel").resizable({
    maxWidth: $("#box_panel").width(),

    create: function(){
      $(this).width(<%= interface.panel_sizex %>);
      $(this).height(<%= interface.panel_sizey %>);
    },

    start: function () {
      pos = getdraggablemaxheightwidth();
      $(this).css("min-height", pos[0]);
      $(this).css("min-width", pos[1]);
    },


    stop: function(event, ui) {
      var width = ui.size.width;
      var height = ui.size.height;
      var id = "<%= interface.id %>";

      //Do the ajax call to the server

      $.ajax({
        type: "POST",
        url: "/interface/update_board_size",
        data: { height:  height, width:  width, id: id},
        beforeSend: function(xhr, settings){
          xhr.setRequestHeader('X-CSRF-Token', $("#_csrf").val());
        },

        success: function(data){
          console.log('board size updated');
        },

        error: function(xhr, status, text) {
          bootstrap_alert['danger'](xhr.responseText, 5000 );
        }
      });
    }

  });

</script>
